{"ast":null,"code":"import { useContext, useEffect, useState } from \"react\";\nimport { __RouterContext as RouterContext } from \"react-router\";\nimport { singleMovieData } from \"../../Home page/Movies/useMoviesApi\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nexport const useSingleMovie = () => {\n  const useRouter = () => useContext(RouterContext);\n\n  const {\n    match\n  } = useRouter();\n  const movieId = match.params.id;\n  const {\n    user\n  } = useAuth0();\n  const [movie, setMovie] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchMovie = async () => {\n      const {\n        movie,\n        comments,\n        trailer\n      } = await singleMovieData(movieId, user);\n      setMovie({ ...movie.data,\n        ...trailer.data,\n        comments: comments.data\n      });\n    };\n\n    fetchMovie().then(() => setLoading(false));\n  }, [setMovie, movieId]);\n  return {\n    movie,\n    loading,\n    setMovie\n  };\n};","map":{"version":3,"sources":["/Users/milosdjurkovic/MockIMDB/src/Component/Movie page/Single movie/useSingleMovie.js"],"names":["useContext","useEffect","useState","__RouterContext","RouterContext","singleMovieData","useAuth0","useSingleMovie","useRouter","match","movieId","params","id","user","movie","setMovie","loading","setLoading","fetchMovie","comments","trailer","data","then"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,eAAe,IAAIC,aAA5B,QAAiD,cAAjD;AACA,SAASC,eAAT,QAAgC,qCAAhC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,QAAMC,SAAS,GAAG,MAAMR,UAAU,CAACI,aAAD,CAAlC;;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAYD,SAAS,EAA3B;AACA,QAAME,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,EAA7B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWP,QAAQ,EAAzB;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,UAAU,GAAG,YAAY;AAC7B,YAAM;AAAEJ,QAAAA,KAAF;AAASK,QAAAA,QAAT;AAAmBC,QAAAA;AAAnB,UAA+B,MAAMf,eAAe,CACxDK,OADwD,EAExDG,IAFwD,CAA1D;AAIAE,MAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAK,CAACO,IAAX;AAAiB,WAAGD,OAAO,CAACC,IAA5B;AAAkCF,QAAAA,QAAQ,EAAEA,QAAQ,CAACE;AAArD,OAAD,CAAR;AACD,KAND;;AAOAH,IAAAA,UAAU,GAAGI,IAAb,CAAkB,MAAML,UAAU,CAAC,KAAD,CAAlC;AACD,GATQ,EASN,CAACF,QAAD,EAAWL,OAAX,CATM,CAAT;AAWA,SAAO;AACLI,IAAAA,KADK;AAELE,IAAAA,OAFK;AAGLD,IAAAA;AAHK,GAAP;AAKD,CAxBM","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { __RouterContext as RouterContext } from \"react-router\";\nimport { singleMovieData } from \"../../Home page/Movies/useMoviesApi\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nexport const useSingleMovie = () => {\n  const useRouter = () => useContext(RouterContext);\n  const { match } = useRouter();\n  const movieId = match.params.id;\n  const { user } = useAuth0();\n  const [movie, setMovie] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      const { movie, comments, trailer } = await singleMovieData(\n        movieId,\n        user\n      );\n      setMovie({ ...movie.data, ...trailer.data, comments: comments.data });\n    };\n    fetchMovie().then(() => setLoading(false));\n  }, [setMovie, movieId]);\n\n  return {\n    movie,\n    loading,\n    setMovie,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}