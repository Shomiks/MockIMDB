{"ast":null,"code":"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nconst apiKey = \"k_f1xb5k3v\";\nexport async function singleMovieData(id) {\n  const movie = await axios(`http://localhost:5000/api/movies/${id}`);\n  const comments = await axios(`https://5fe8885b2e12ee0017ab47c0.mockapi.io/api/v1/movies/${id}/comments`);\n  const trailer = await axios(`https://imdb-api.com/API/YouTubeTrailer/${apiKey}/${movie.data.imdbId}`);\n  return {\n    movie,\n    comments,\n    trailer\n  };\n}\nexport const useMoviesApi = () => {\n  const [movies, setMovies] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const categories = await axios(\"http://localhost:5000/api/categories\");\n      const movies = await axios(\"http://localhost:5000/api/movies\");\n      setCategories(categories.data);\n      setMovies(movies.data);\n    };\n\n    fetchMovies().then(() => setLoading(false));\n  }, []);\n  return {\n    movies,\n    categories,\n    loading\n  };\n};","map":{"version":3,"sources":["/Users/milosdjurkovic/MockIMDB/src/Component/Home page/Movies/useMoviesApi.js"],"names":["axios","useEffect","useState","apiKey","singleMovieData","id","movie","comments","trailer","data","imdbId","useMoviesApi","movies","setMovies","categories","setCategories","loading","setLoading","fetchMovies","then"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,MAAMC,MAAM,GAAG,YAAf;AAEA,OAAO,eAAeC,eAAf,CAA+BC,EAA/B,EAAmC;AACxC,QAAMC,KAAK,GAAG,MAAMN,KAAK,CACtB,oCAAmCK,EAAG,EADhB,CAAzB;AAGA,QAAME,QAAQ,GAAG,MAAMP,KAAK,CACzB,6DAA4DK,EAAG,WADtC,CAA5B;AAGA,QAAMG,OAAO,GAAG,MAAMR,KAAK,CACxB,2CAA0CG,MAAO,IAAGG,KAAK,CAACG,IAAN,CAAWC,MAAO,EAD9C,CAA3B;AAIA,SAAO;AACLJ,IAAAA,KADK;AAELC,IAAAA,QAFK;AAGLC,IAAAA;AAHK,GAAP;AAKD;AAED,OAAO,MAAMG,YAAY,GAAG,MAAM;AAChC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,WAAW,GAAG,YAAY;AAC9B,YAAMJ,UAAU,GAAG,MAAMd,KAAK,CAAC,sCAAD,CAA9B;AACA,YAAMY,MAAM,GAAG,MAAMZ,KAAK,CACxB,kCADwB,CAA1B;AAGAe,MAAAA,aAAa,CAACD,UAAU,CAACL,IAAZ,CAAb;AACAI,MAAAA,SAAS,CAACD,MAAM,CAACH,IAAR,CAAT;AACD,KAPD;;AAQAS,IAAAA,WAAW,GAAGC,IAAd,CAAmB,MAAMF,UAAU,CAAC,KAAD,CAAnC;AACD,GAVQ,EAUN,EAVM,CAAT;AAYA,SAAO;AACLL,IAAAA,MADK;AAELE,IAAAA,UAFK;AAGLE,IAAAA;AAHK,GAAP;AAKD,CAtBM","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nconst apiKey = \"k_f1xb5k3v\";\n\nexport async function singleMovieData(id) {\n  const movie = await axios(\n    `http://localhost:5000/api/movies/${id}`\n  );\n  const comments = await axios(\n    `https://5fe8885b2e12ee0017ab47c0.mockapi.io/api/v1/movies/${id}/comments`\n  );\n  const trailer = await axios(\n    `https://imdb-api.com/API/YouTubeTrailer/${apiKey}/${movie.data.imdbId}`\n  );\n\n  return {\n    movie,\n    comments,\n    trailer,\n  };\n}\n\nexport const useMoviesApi = () => {\n  const [movies, setMovies] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const categories = await axios(\"http://localhost:5000/api/categories\");\n      const movies = await axios(\n        \"http://localhost:5000/api/movies\"\n      );\n      setCategories(categories.data);\n      setMovies(movies.data);\n    };\n    fetchMovies().then(() => setLoading(false));\n  }, []);\n\n  return {\n    movies,\n    categories,\n    loading,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}