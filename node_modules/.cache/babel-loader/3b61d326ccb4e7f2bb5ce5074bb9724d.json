{"ast":null,"code":"var _jsxFileName = \"/Users/milosdjurkovic/MockIMDB/src/Component/Home page/Movies/index.js\";\nimport React, { createContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport MoviesListing from \"./movieCard\";\nimport { useMoviesApi } from \"./useMoviesApi\";\nimport CategoriesListing from \"./Categories\";\nimport PageLoader from \"../../../lib/Loader\";\nimport { TextField } from \"@material-ui/core\";\nconst MainContainer = styled.div`\n  margin-bottom: 30px;\n  @media (max-width: 500px) {\n    text-align: center;\n  }\n`;\nconst FilterContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  & > div {\n    width: 150px;\n  }\n  @media (max-width: 500px) {\n    & > div {\n      width: 130px;\n    }\n  }\n`;\nexport const CategoryContext = createContext(undefined);\n\nconst Movies = () => {\n  const {\n    movies,\n    categories,\n    loading\n  } = useMoviesApi();\n  const [selectedCategory, setSelectedCategory] = useState(\"0\");\n  const [search, setSearch] = useState(\"\");\n  const searchResults = movies.filter(movie => movie.name.startsWith(search.toUpperCase()));\n  return loading ? /*#__PURE__*/React.createElement(PageLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(CategoryContext.Provider, {\n    value: [selectedCategory, setSelectedCategory],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MainContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FilterContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CategoriesListing, {\n    categories: categories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    placeholder: \"Search\",\n    value: search,\n    onChange: e => setSearch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(MoviesListing, {\n    movies: movies,\n    selectedCategory: selectedCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Movies;","map":{"version":3,"sources":["/Users/milosdjurkovic/MockIMDB/src/Component/Home page/Movies/index.js"],"names":["React","createContext","useState","styled","MoviesListing","useMoviesApi","CategoriesListing","PageLoader","TextField","MainContainer","div","FilterContainer","CategoryContext","undefined","Movies","movies","categories","loading","selectedCategory","setSelectedCategory","search","setSearch","searchResults","filter","movie","name","startsWith","toUpperCase","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,aAAP,MAA0B,aAA1B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,iBAAP,MAA8B,cAA9B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAEA,MAAMC,aAAa,GAAGN,MAAM,CAACO,GAAI;;;;;CAAjC;AAOA,MAAMC,eAAe,GAAGR,MAAM,CAACO,GAAI;;;;;;;;;;;CAAnC;AAaA,OAAO,MAAME,eAAe,GAAGX,aAAa,CAACY,SAAD,CAArC;;AAEP,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,UAAV;AAAsBC,IAAAA;AAAtB,MAAkCZ,YAAY,EAApD;AACA,QAAM,CAACa,gBAAD,EAAmBC,mBAAnB,IAA0CjB,QAAQ,CAAC,GAAD,CAAxD;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMoB,aAAa,GAAGP,MAAM,CAACQ,MAAP,CAAeC,KAAD,IAClCA,KAAK,CAACC,IAAN,CAAWC,UAAX,CAAsBN,MAAM,CAACO,WAAP,EAAtB,CADoB,CAAtB;AAIA,SAAOV,OAAO,gBACZ,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,gBAGZ,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE,CAACC,gBAAD,EAAmBC,mBAAnB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAmB,IAAA,UAAU,EAAEH,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,QADd;AAEE,IAAA,KAAK,EAAEI,MAFT;AAGE,IAAA,QAAQ,EAAGQ,CAAD,IAAOP,SAAS,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eASE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEf,MAAvB;AAA+B,IAAA,gBAAgB,EAAEG,gBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CAHF;AAiBD,CAzBD;;AA2BA,eAAeJ,MAAf","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport MoviesListing from \"./movieCard\";\nimport { useMoviesApi } from \"./useMoviesApi\";\nimport CategoriesListing from \"./Categories\";\nimport PageLoader from \"../../../lib/Loader\";\nimport { TextField } from \"@material-ui/core\";\n\nconst MainContainer = styled.div`\n  margin-bottom: 30px;\n  @media (max-width: 500px) {\n    text-align: center;\n  }\n`;\n\nconst FilterContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  & > div {\n    width: 150px;\n  }\n  @media (max-width: 500px) {\n    & > div {\n      width: 130px;\n    }\n  }\n`;\n\nexport const CategoryContext = createContext(undefined);\n\nconst Movies = () => {\n  const { movies, categories, loading } = useMoviesApi();\n  const [selectedCategory, setSelectedCategory] = useState(\"0\");\n  const [search, setSearch] = useState(\"\");\n  const searchResults = movies.filter((movie) =>\n    movie.name.startsWith(search.toUpperCase())\n  );\n\n  return loading ? (\n    <PageLoader />\n  ) : (\n    <CategoryContext.Provider value={[selectedCategory, setSelectedCategory]}>\n      <MainContainer>\n        <FilterContainer>\n          <CategoriesListing categories={categories} />\n          <TextField\n            placeholder=\"Search\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n          />\n        </FilterContainer>\n        <MoviesListing movies={movies} selectedCategory={selectedCategory} />\n      </MainContainer>\n    </CategoryContext.Provider>\n  );\n};\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}