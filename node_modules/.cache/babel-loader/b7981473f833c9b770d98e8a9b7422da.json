{"ast":null,"code":"var _jsxFileName = \"/Users/milosdjurkovic/MockIMDB/src/Component/Movie page/Single movie/Comments/commentsForm.js\";\nimport React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { useForm } from \"react-hook-form\";\nimport { __RouterContext as RouterContext } from \"react-router\";\nimport { CommentsContext } from \"../index\";\nimport axios from \"axios\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nconst WriteCommentError = styled.div`\n  color: red;\n`;\nconst CommentTextarea = styled.textarea`\n  width: 100%;\n  min-height: 100px;\n`;\nconst Input = styled.input`\n  cursor: pointer;\n  margin-top: 10px;\n`;\n\nconst CommentForm = () => {\n  const [movie, setMovie] = useContext(CommentsContext);\n  const {\n    user\n  } = useAuth0();\n  const comments = movie.comments;\n  const {\n    register,\n    handleSubmit,\n    errors,\n    reset\n  } = useForm();\n\n  const useRouter = () => useContext(RouterContext);\n\n  const {\n    match\n  } = useRouter();\n  const movieId = match.params.id;\n  const lastCommentId = comments.length ? comments[comments.length - 1].id + 1 : 0;\n\n  const onSubmit = comment => {\n    reset();\n    console.log(user);\n    const newComment = {\n      comment: comment.text,\n      movieId: parseInt(movieId),\n      user: user.nickname,\n      id: lastCommentId\n    };\n    axios.post(`http://localhost:5000/api/comments?movieId=${movieId}`, { ...newComment\n    }).then(setMovie(prevState => ({ ...prevState,\n      comments: [...comments, newComment]\n    }))).catch(() => alert(\"Bad api call\"));\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CommentTextarea, {\n    placeholder: \"Write comment\",\n    name: \"text\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), errors.text && /*#__PURE__*/React.createElement(WriteCommentError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Please start typing\"));\n};\n\nexport default CommentForm;","map":{"version":3,"sources":["/Users/milosdjurkovic/MockIMDB/src/Component/Movie page/Single movie/Comments/commentsForm.js"],"names":["React","useContext","styled","useForm","__RouterContext","RouterContext","CommentsContext","axios","useAuth0","WriteCommentError","div","CommentTextarea","textarea","Input","input","CommentForm","movie","setMovie","user","comments","register","handleSubmit","errors","reset","useRouter","match","movieId","params","id","lastCommentId","length","onSubmit","comment","console","log","newComment","text","parseInt","nickname","post","then","prevState","catch","alert","required"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,eAAe,IAAIC,aAA5B,QAAiD,cAAjD;AACA,SAASC,eAAT,QAAgC,UAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,MAAMC,iBAAiB,GAAGP,MAAM,CAACQ,GAAI;;CAArC;AAIA,MAAMC,eAAe,GAAGT,MAAM,CAACU,QAAS;;;CAAxC;AAKA,MAAMC,KAAK,GAAGX,MAAM,CAACY,KAAM;;;CAA3B;;AAKA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,UAAU,CAACK,eAAD,CAApC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAWV,QAAQ,EAAzB;AACA,QAAMW,QAAQ,GAAGH,KAAK,CAACG,QAAvB;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,MAA1B;AAAkCC,IAAAA;AAAlC,MAA4CpB,OAAO,EAAzD;;AACA,QAAMqB,SAAS,GAAG,MAAMvB,UAAU,CAACI,aAAD,CAAlC;;AACA,QAAM;AAAEoB,IAAAA;AAAF,MAAYD,SAAS,EAA3B;AACA,QAAME,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,EAA7B;AACA,QAAMC,aAAa,GAAGV,QAAQ,CAACW,MAAT,GAClBX,QAAQ,CAACA,QAAQ,CAACW,MAAT,GAAkB,CAAnB,CAAR,CAA8BF,EAA9B,GAAmC,CADjB,GAElB,CAFJ;;AAIA,QAAMG,QAAQ,GAAIC,OAAD,IAAa;AAC5BT,IAAAA,KAAK;AACLU,IAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ;AACA,UAAMiB,UAAU,GAAG;AACjBH,MAAAA,OAAO,EAAEA,OAAO,CAACI,IADA;AAEjBV,MAAAA,OAAO,EAAEW,QAAQ,CAACX,OAAD,CAFA;AAGjBR,MAAAA,IAAI,EAAEA,IAAI,CAACoB,QAHM;AAIjBV,MAAAA,EAAE,EAAEC;AAJa,KAAnB;AAMAtB,IAAAA,KAAK,CACFgC,IADH,CACS,8CAA6Cb,OAAQ,EAD9D,EACiE,EAC7D,GAAGS;AAD0D,KADjE,EAIGK,IAJH,CAKIvB,QAAQ,CAAEwB,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvBtB,MAAAA,QAAQ,EAAE,CAAC,GAAGA,QAAJ,EAAcgB,UAAd;AAFa,KAAhB,CAAD,CALZ,EAUGO,KAVH,CAUS,MAAMC,KAAK,CAAC,cAAD,CAVpB;AAWD,GApBD;;AAsBA,sBACE;AAAM,IAAA,QAAQ,EAAEtB,YAAY,CAACU,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AACE,IAAA,WAAW,EAAC,eADd;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,GAAG,EAAEX,QAAQ,CAAC;AAAEwB,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOGtB,MAAM,CAACc,IAAP,iBACC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BARJ,CADF;AAaD,CA/CD;;AAiDA,eAAerB,WAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { useForm } from \"react-hook-form\";\nimport { __RouterContext as RouterContext } from \"react-router\";\nimport { CommentsContext } from \"../index\";\nimport axios from \"axios\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst WriteCommentError = styled.div`\n  color: red;\n`;\n\nconst CommentTextarea = styled.textarea`\n  width: 100%;\n  min-height: 100px;\n`;\n\nconst Input = styled.input`\n  cursor: pointer;\n  margin-top: 10px;\n`;\n\nconst CommentForm = () => {\n  const [movie, setMovie] = useContext(CommentsContext);\n  const { user } = useAuth0();\n  const comments = movie.comments;\n  const { register, handleSubmit, errors, reset } = useForm();\n  const useRouter = () => useContext(RouterContext);\n  const { match } = useRouter();\n  const movieId = match.params.id;\n  const lastCommentId = comments.length\n    ? comments[comments.length - 1].id + 1\n    : 0;\n\n  const onSubmit = (comment) => {\n    reset();\n    console.log(user)\n    const newComment = {\n      comment: comment.text,\n      movieId: parseInt(movieId),\n      user: user.nickname,\n      id: lastCommentId\n    };\n    axios\n      .post(`http://localhost:5000/api/comments?movieId=${movieId}`, {\n        ...newComment,\n      })\n      .then(\n        setMovie((prevState) => ({\n          ...prevState,\n          comments: [...comments, newComment],\n        }))\n      )\n      .catch(() => alert(\"Bad api call\"));\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <CommentTextarea\n        placeholder=\"Write comment\"\n        name=\"text\"\n        ref={register({ required: true })}\n      />\n      <Input type=\"submit\" />\n      {errors.text && (\n        <WriteCommentError>Please start typing</WriteCommentError>\n      )}\n    </form>\n  );\n};\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}